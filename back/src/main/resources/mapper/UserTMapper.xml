<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.back.mapper.UserTMapper">
    <resultMap id="BaseResultMap" type="org.example.back.entity.UserT">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="birthday" property="birthday" jdbcType="TIMESTAMP"/>
        <result column="money" property="money" jdbcType="FLOAT"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="findByName" resultType="org.example.back.entity.UserT">
        SELECT id, name, password, email, birthday, money, avatar
        FROM userT
        WHERE name = #{name}
    </select>
    <insert id="insert" parameterType="org.example.back.entity.UserT" useGeneratedKeys="true" keyProperty="id">
        insert into userT (name, password, email, birthday, money, avatar)
        values (#{name}, #{password}, #{email}, #{birthday}, #{money}, #{avatar})
    </insert>

    <update id="update" parameterType="org.example.back.entity.UserT">
        update userT
        set  password = #{password}

        where name = #{name}
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from userT where id = #{id}
    </delete>

    <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select id, name, password, email, birthday, money, avatar
        from userT where id = #{id}
    </select>
</mapper>
    